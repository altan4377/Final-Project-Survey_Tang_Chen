/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package finalproject.tang.chen;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author mache9294
 */
public class AnalyzeSurveyResponse extends javax.swing.JFrame {
    private Survey survey;
    private ArrayList<Question> questions = survey.getSurveyQuestions();
    private ArrayList<String> criteriaSelected;
    
    
    
    
    /**
     * Creates new form AnalyzeSurveyResponse
     */
    public AnalyzeSurveyResponse(String survey) {
        initComponents();
        for (int i = 0; i < questions.size(); i++) {
            jComboBoxQuestion.addItem(questions.get(i).getQuestion());
        }
        
        try{
            FileReader fr = new FileReader(survey);
            BufferedReader br = new BufferedReader(fr);
            boolean eof = false;
            while(!eof){
                String typeQuestion = br.readLine();
                if(typeQuestion.equals(" ")){
                    eof = true;
                }else{
                    
                }
            }
        }catch(IOException e){
            System.out.println("ERROR " + e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jComboBoxQuestion = new javax.swing.JComboBox();
        jComboBoxCriteria = new javax.swing.JComboBox();
        lblQuestion = new javax.swing.JLabel();
        lblCriteria = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        lblQuestionAndCriteria = new javax.swing.JLabel();
        lblFindings = new javax.swing.JLabel();
        btnGo = new javax.swing.JButton();
        btnAddCriteria = new javax.swing.JButton();
        btnClearCriteria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setText("Survey Analysis");

        jComboBoxQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxQuestionActionPerformed(evt);
            }
        });

        jComboBoxCriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCriteriaActionPerformed(evt);
            }
        });

        lblQuestion.setText("Question");

        lblCriteria.setText("Criteria");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        lblQuestionAndCriteria.setText("Question And Criteria");

        lblFindings.setText("Findings Based On Criteria");

        btnGo.setText("Go");
        btnGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoActionPerformed(evt);
            }
        });

        btnAddCriteria.setText("Add Criteria");
        btnAddCriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCriteriaActionPerformed(evt);
            }
        });

        btnClearCriteria.setText("Clear Criteria");
        btnClearCriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCriteriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitle)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuestion))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCriteria)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(btnAddCriteria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClearCriteria)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                .addComponent(btnGo))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFindings)
                    .addComponent(lblQuestionAndCriteria))
                .addGap(121, 121, 121))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuestion)
                    .addComponent(lblCriteria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGo)
                    .addComponent(btnAddCriteria)
                    .addComponent(btnClearCriteria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblQuestionAndCriteria)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFindings)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * This method will print out all the elements in a list
     * @param elements - the array list of answers
     * @return - all elements in list on new line
     */
    public String printList(ArrayList<Question> elements) {
        String out = "";
        for (Question question : elements) {
            out += question + "\n";
        }
        return out;
    }
    
    
    private void jComboBoxQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxQuestionActionPerformed
        String questionName = jComboBoxQuestion.getSelectedItem().toString(); // get the name of the question
        String questionType;
       
        for (int i = 0; i < questions.size(); i++) { // run thru survey questions
            
            if (questionName.equals(questions.get(i).getQuestion())) { // compare actual question? in survey
                questionType = questions.get(i).getType(); // get type
                
                if (questionType.equals("SingleMC")) {
                    SingleMC question = (SingleMC) questions.get(i);
                    for (int j = 0; j < question.getAnswers().size(); j++) {
                        jComboBoxCriteria.addItem(question.getAnswers().get(j));
                    }
                } else if (questionType.equals("MultipleMC")) {
                    MultipleMC question = (MultipleMC) questions.get(i);
                    for (int j = 0; j < question.getAnswers().size(); j++) {
                        jComboBoxCriteria.addItem(question.getAnswers().get(j));
                    }
                } else {
                    JOptionPane.showInputDialog(null, "There is no analysis for short answer survey questions.");
                }
            }

        }
    }//GEN-LAST:event_jComboBoxQuestionActionPerformed

    private void btnGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoActionPerformed
        
    }//GEN-LAST:event_btnGoActionPerformed

    private void jComboBoxCriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCriteriaActionPerformed
        String criteriaName = jComboBoxCriteria.getSelectedItem().toString();
        
    }//GEN-LAST:event_jComboBoxCriteriaActionPerformed

    private void btnAddCriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCriteriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddCriteriaActionPerformed

    private void btnClearCriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCriteriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearCriteriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCriteria;
    private javax.swing.JButton btnClearCriteria;
    private javax.swing.JButton btnGo;
    private javax.swing.JComboBox jComboBoxCriteria;
    private javax.swing.JComboBox jComboBoxQuestion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lblCriteria;
    private javax.swing.JLabel lblFindings;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblQuestionAndCriteria;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
}
